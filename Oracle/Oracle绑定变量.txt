

绑定变量可以为多条SQL语句共享单个共享游标，以减少硬解析SQL语句所花费的时间。

绑定变量的本质就是使本来需要做硬解析的SQL变成软解析，以减少ORACLE花费在SQL解析上的时间和资源。

绑定变量：是指在sql语句的条件中使用变量而不是常量。


SQL语句的静态部分：SQL语句本身的关键词、所涉及的表名以及表的列名等。
SQL语句的动态部分：SQL语句中的值（即表里的数据）。

对于相同静态部分的SQL语句来说，不同的动态部分所产生的执行计划基本都是一样的。


当Oracle在shared pool中查找相同的SQL语句时，如果SQL语句使用了绑定变量（bind variable），那么就是比较SQL语句的静态部分，静态部分是有限的，很容易就能够缓存在内存里，从而找到相同的SQL语句的概 率很高。如果没有使用绑定变量，则就是比较SQL语句的静态部分和动态部分，而动态部分的变化是无限的，因此这样的SQL语句很难被缓存在shared pool里。毕竟内存是有限的，不可能把所有的动态部分都缓存在shared pool里。


绑定变量是OLTP系统中一个非常值得关注的技术。良好的绑定变量会使OLTP系统数据库中的SQL执行速度飞快，内存效率极高；不使用绑定变量可能会使OLTP数据库不堪重负，资源被SQL解析严重耗尽，系统运行缓慢。



在PL/SQL中，引用变量即是引用绑定变量。但是PL/SQL中的动态SQL并不是这样。

Oracle在解析SQL时会把PL/SQL中定义的变量转为绑定变量。



使用SQL首次运行时的值来生成执行计划，后续再次运行该SQL语句则使用首次执行计划来执行。



绑定变量在OLTP环境下，被广泛的使用；


----------------------------------------------------------------------------------------------


绑定变量只是起到占位的作用，同名的绑定变量并不意味着它们是同样的，在传递时要考虑的是传递的值与绑定变量出现顺序的对位，而不是绑定变量的名称。

绑定变量不能当作嵌入的字符串来使用，只能当作语句中的变量来用。
不能用绑定变量来代替表名、过程名、字段名等。


----------------------------------------------------------------------------------------------

对于OLAP系统中的绑定变量，有以下原则：
（1）OLAP 系统完全没有必要使用绑定变量，那样只会带来负面的影响，比如导致SQL选择错误的执行计划，这个代价有时是灾难性的；让Oracle对每条SQL做硬分析，确切的知道谓词条件的值，这对执行计划的选择至关重要，这样做的原因是，在OLAP系统中，SQL硬分析的代价是可以忽略的，系统的资源基本上是用于做大的SQL查询，和查询比起来，SQL解析消耗的资源显得微不足道。所以得到一个最优的执行计划就非常重要。

（2）在OLAP系统中，让Oracle确切地知道谓词的数值至关重要，它直接决定了SQL执行计划的选择，这样做的方式就是不要使用绑定变量。


